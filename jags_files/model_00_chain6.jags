 model {
	diffcoef[1] = -0.5
	diffcoef[2] =  0.5
	
	alphamid ~ dgamma(2, 0.5)
	alphadiff ~ dnorm(0, pow(0.5,-2))

	betamid ~ dbeta(2,2)
	betadiff ~ dnorm(0, pow(0.125,-2))      

	taumid ~ dgamma(2, 0.4)
	taudiff ~ dnorm(0, pow(0.15,-2))	  

	for (c in 1:nConditions) {
		deltamid[c]  ~ dnorm(0, pow(2.5,-2))
		deltadiff[c] ~ dnorm(0, pow(1.5,-2))
	}

	######### Group Level
	for (g in 1:2) {
		alphagroup[g] = max(0.0001, alphamid + diffcoef[g] * alphadiff)
		betagroup[g]  = min(0.9999, max(0.0001, betamid  + diffcoef[g] * betadiff))
		taugroup[g]   = max(0.0001, taumid   + diffcoef[g] * taudiff)

		# Condition 2 is guessing
		for (c in 1:nConditions) {
			deltagroup[g,c,1] = deltamid[c] + diffcoef[g] * deltadiff[c]
			deltagroup[g,c,2] = 0
		}
	}

	############### Run diffusion model
	for (s in 1:nSubjects) {
		for (tr in 1:nAllTrials) {
			y[s,tr] ~ dwiener(alphagroup[groupList[s]], taugroup[groupList[s]], betagroup[groupList[s]],deltagroup[groupList[s],condList[s,tr], z[s,tr]+1])
			ypred[s,tr] ~ dwiener(alphagroup[groupList[s]], taugroup[groupList[s]], betagroup[groupList[s]],deltagroup[groupList[s],condList[s,tr],z[s,tr]+1])
			z[s,tr] ~ dbern(phi[s]) # guessing or not
		}
		phi[s] ~ dunif(0,1) # random proportion fed into guessing variable, updated based on their trial responses, fed into z
	}

	for (g in 1:2) {
		tausubjrep[g] = 0
		alphasubjrep[g] = 0
		betasubjrep[g] = 0
		for (c in 1:nConditions) {
			deltasubjrep[g,c] = 0
		}
	}
}
